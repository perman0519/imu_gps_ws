cmake_minimum_required(VERSION 3.8)
project(imu_gps_sync_cmake)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(message_filters REQUIRED)

# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

# this is gps_repub_node
add_executable(gps_repub_node src/gps_repub.cpp)
ament_target_dependencies(gps_repub_node
  rclcpp
  sensor_msgs
  std_msgs
)

add_executable(imu_gps_sync_node src/imu_gps_sync.cpp)
ament_target_dependencies(imu_gps_sync_node
  rclcpp
  sensor_msgs
  std_msgs
  message_filters
)

find_package(rclcpp REQUIRED)

install(TARGETS
  gps_repub_node
  DESTINATION lib/${PROJECT_NAME}
)

install(TARGETS
  imu_gps_sync_node
  DESTINATION lib/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()

endif()

ament_package()
